version: "3.3"
services:

  mongodb:
    volumes:
      - mongodb-data:/data/db

  backend:
    ports:
      - "80:80"
    command: /start-reload.sh
    volumes:
      - ./backend:/app
    environment:
      - FRONTEND_URL=http://localhost:19006
      - DEV_MODE=true
      # - JUPYTER=jupyter lab --ip=0.0.0.0 --allow-root --NotebookApp.custom_display_url=http://127.0.0.1:8888
      # - SERVER_HOST=http://${DOMAIN?Variable not set}
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
        INSTALL_JUPYTER: ${INSTALL_JUPYTER-false}
        
  celeryworker:
    build:
      context: ./backend
      dockerfile: celeryworker.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
    volumes:
      - ./backend:/app
    environment:
      - RUN=celery worker -A app.worker -l info -Q main-queue
      # - RUN=celery worker -A app.worker -l info -Q main-queue -c 1

  ## Use yarn dev locally to start it (easier than in docker)
  # frontend:
  #   build:
  #     context: ./frontend
  #     args:
  #       FRONTEND_ENV: dev
  #       API_URL: http://localhost
  #   ports:
  #     - 19006:19006
  #     - 4000:4000
  #   command: "yarn dev"
  #   environment:
  #     - API_URL=http://localhost
  #   # volumes:
  #   #   - ./frontend:/webapp


  # proxy:
  #   image: traefik:v2.2
  #   ports:
  #     - "80:80"
  #     - "8090:8080"
  #   networks:
  #     - ${TRAEFIK_PUBLIC_NETWORK?Variable not set}
  #     - default
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   command:
  #     # Enable Docker in Traefik, so that it reads labels from Docker services
  #     - --providers.docker
  #     # Add a constraint to only use services with the label for this stack
  #     # from the env var TRAEFIK_TAG
  #     - --providers.docker.constraints=Label(`traefik.constraint-label-stack`, `${TRAEFIK_TAG?Variable not set}`)
  #     # Do not expose all Docker services, only the ones explicitly exposed
  #     - --providers.docker.exposedbydefault=false
  #     # Disable Docker Swarm mode for local development
  #     # - --providers.docker.swarmmode
  #     # Enable the access log, with HTTP requests
  #     - --accesslog
  #     # Enable the Traefik log, for configurations and errors
  #     - --log
  #     # Enable the Dashboard and API
  #     - --api
  #     # Enable the Dashboard and API in insecure mode for local development
  #     - --api.insecure=true
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.${STACK_NAME?Variable not set}-traefik-public-http.rule=Host(`${DOMAIN?Variable not set}`)
  #     - traefik.http.services.${STACK_NAME?Variable not set}-traefik-public.loadbalancer.server.port=80


  # flower:
  #   ports:
  #     - "5555:5555"
  # pgadmin:
  #   ports:
  #     - "5050:5050"


volumes:
  mongodb-data:
